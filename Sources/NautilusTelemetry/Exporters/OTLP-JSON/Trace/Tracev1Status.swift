//
// Tracev1Status.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
	import AnyCodable
#endif

@available(*, deprecated, renamed: "OTLP.Tracev1Status")
typealias Tracev1Status = OTLP.Tracev1Status

extension OTLP {
	/** The Status type defines a logical error model that is suitable for different programming environments, including REST APIs and RPC APIs. */
	struct Tracev1Status: Codable, Hashable {
		/** A developer-facing human readable error message. */
		var message: String?
		var code: StatusStatusCode?

		init(message: String? = nil, code: StatusStatusCode? = nil) {
			self.message = message
			self.code = code
		}

		enum CodingKeys: String, CodingKey, CaseIterable {
			case message
			case code
		}

		// Encodable protocol methods

		func encode(to encoder: Encoder) throws {
			var container = encoder.container(keyedBy: CodingKeys.self)
			try container.encodeIfPresent(message, forKey: .message)
			try container.encodeIfPresent(code, forKey: .code)
		}
	}
}
