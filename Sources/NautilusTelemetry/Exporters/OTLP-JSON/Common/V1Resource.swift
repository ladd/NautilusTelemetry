//
// V1Resource.swift
//
// Generated by openapi-generator
// https://openapi-generator.tech
//

import Foundation
#if canImport(AnyCodable)
	import AnyCodable
#endif

@available(*, deprecated, renamed: "OTLP.V1Resource")
typealias V1Resource = OTLP.V1Resource

extension OTLP {
	/** Resource information. */
	struct V1Resource: Codable, Hashable {
		/** Set of attributes that describe the resource. Attribute keys MUST be unique (it is not allowed to have more than one attribute with the same key). */
		var attributes: [V1KeyValue]?
		/** dropped_attributes_count is the number of dropped attributes. If the value is 0, then no attributes were dropped. */
		var droppedAttributesCount: Int64?

		init(attributes: [V1KeyValue]? = nil, droppedAttributesCount: Int64? = nil) {
			self.attributes = attributes
			self.droppedAttributesCount = droppedAttributesCount
		}

		enum CodingKeys: String, CodingKey, CaseIterable {
			case attributes
			case droppedAttributesCount
		}

		// Encodable protocol methods

		func encode(to encoder: Encoder) throws {
			var container = encoder.container(keyedBy: CodingKeys.self)
			try container.encodeIfPresent(attributes, forKey: .attributes)
			try container.encodeIfPresent(droppedAttributesCount, forKey: .droppedAttributesCount)
		}
	}
}
